name: "Publish icons"

on:
    workflow_dispatch:
        inputs:
            type:
                description: "icons version type. Choose empty option if using custom version"
                type: choice
                default: "minor"
                options:
                    - patch
                    - minor
                    - major
                    - prerelease
                    - prepatch
                    - preminor
                    - premajor
                    - ~
                required: true
            custom_version:
                description: 'custom version: x.y.z-preid.a (without "v"). Overrides version type'
                required: false
            tag:
                description: 'prerelease tag: preid ("alpha" or "beta"). Leave empty for release'
                required: false

run-name: Publish @vknext/icons ${{ inputs.custom_version }} ${{ inputs.type }} ${{ inputs.tag }}

jobs:
    publish:
        runs-on: ubuntu-latest
        permissions:
            contents: write
            id-token: write

        steps:
            - uses: actions/checkout@v3
              with:
                  token: ${{ secrets.DEVTOOLS_GITHUB_TOKEN }}

            - uses: actions/setup-node@v3
              with:
                  node-version: 22.17.0
                  cache: "yarn"
                  always-auth: true
                  registry-url: "https://registry.npmjs.org"

            - run: YARN_ENABLE_SCRIPTS=false yarn install --immutable

            - name: Build @vknext/icons
              run: yarn icons-build

            - name: Set Git credentials
              run: |
                  git config --local user.email "actions@github.com"
                  git config --local user.name "GitHub Action"

            - name: Saving current version to env
              id: prev_version
              run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

            - name: Bumping @vknext/icons version via version type
              if: ${{ !github.event.inputs.custom_version }}
              run: yarn run g:npm:version ${{ github.event.inputs.type }} --preid ${{ github.event.inputs.tag }}

            - name: Bumping @vknext/icons version via custom version
              if: ${{ github.event.inputs.custom_version }}
              run: yarn run g:npm:version ${{ github.event.inputs.custom_version }} --preid ${{ github.event.inputs.tag }}

            - name: Saving updated version to env
              id: updated_version
              run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

            - name: Adding commit and tag with updated version number
              run: |
                  git add -A
                  git commit -m "bump(@vknext/icons): from ${{ steps.prev_version.outputs.version }} to ${{ steps.updated_version.outputs.version }}"
                  git tag @vknext/icons@${{ steps.updated_version.outputs.version }}

            - name: Pushing changes
              uses: ad-m/github-push-action@master
              with:
                  github_token: ${{ secrets.DEVTOOLS_GITHUB_TOKEN }}
                  branch: ${{ github.ref_name }}
                  tags: true

            - name: Setup NPM Auth Token to .npmrc
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPMJS_PUBLISH_TOKEN }}
              run: echo "//registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN" > ~/.npmrc

            - name: Publishing tagged release
              if: ${{ github.event.inputs.tag }}
              run: npm publish --tag ${{ github.event.inputs.tag }} --access public --provenance=false

            - name: Publishing release
              if: ${{ !github.event.inputs.tag }}
              run: npm publish --access public --provenance=false

            - name: Creating doc
              run: yarn docs

            - name: Publishing doc
              uses: JamesIves/github-pages-deploy-action@v4
              with:
                  token: ${{ secrets.DEVTOOLS_GITHUB_TOKEN }}
                  branch: gh-pages
                  folder: docs
                  clean: false
                  force: false
